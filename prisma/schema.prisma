generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model analytics {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  analytics_details String   @db.VarChar(255)
  client_id         String?  @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  client            client?  @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model client {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  image        String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  analytics    analytics[]
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  community    community[]
  diet_plan    diet_plan[]
  health_tip   health_tip[]
  workout_plan workout_plan[]
}

model community {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  community_details String   @db.VarChar(255)
  client_id         String?  @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  client            client?  @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model diet_plan {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan_details String   @db.VarChar(255)
  client_id    String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  client       client?  @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model health_tip {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tip_details String   @db.VarChar(255)
  client_id   String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  client      client?  @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique @db.VarChar(255)
  firstName   String?  @db.VarChar(255)
  lastName    String?  @db.VarChar(255)
  roq_user_id String   @db.VarChar(255)
  tenant_id   String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  client      client[]
}

model workout_plan {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan_details String   @db.VarChar(255)
  client_id    String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  client       client?  @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
